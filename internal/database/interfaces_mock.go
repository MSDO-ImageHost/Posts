// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package database is a generated GoMock package.
package database

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockstorageInterface is a mock of storageInterface interface
type MockstorageInterface struct {
	ctrl     *gomock.Controller
	recorder *MockstorageInterfaceMockRecorder
}

// MockstorageInterfaceMockRecorder is the mock recorder for MockstorageInterface
type MockstorageInterfaceMockRecorder struct {
	mock *MockstorageInterface
}

// NewMockstorageInterface creates a new mock instance
func NewMockstorageInterface(ctrl *gomock.Controller) *MockstorageInterface {
	mock := &MockstorageInterface{ctrl: ctrl}
	mock.recorder = &MockstorageInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockstorageInterface) EXPECT() *MockstorageInterfaceMockRecorder {
	return m.recorder
}

// Add mocks base method
func (m *MockstorageInterface) Add(post Scaffold) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", post)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Add indicates an expected call of Add
func (mr *MockstorageInterfaceMockRecorder) Add(post interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockstorageInterface)(nil).Add), post)
}
